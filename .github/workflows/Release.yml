name: Publish a release

on:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  publish_archives:
    strategy:
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-18.04]

    runs-on: ${{matrix.os}}

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - uses: actions/cache@v2.1.7
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK 11
        uses: actions/setup-java@v2.5.0
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Publish the macOS artifacts
        if: matrix.os == 'macOS-latest'
        env:
          ORG_GRADLE_PROJECT_mavenCentralRepositoryUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralRepositoryPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY }}
        run: ./gradlew publishAllPublicationsToMavenRepository --no-daemon
      - name: Publish the windows artifact
        if: matrix.os == 'windows-latest'
        env:
          ORG_GRADLE_PROJECT_mavenCentralRepositoryUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralRepositoryPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY }}
        run: ./gradlew publishMingwX64PublicationToMavenRepository publishMingwX86PublicationToMavenRepository
      - name: Publish the linux artifact
        if: matrix.os == 'ubuntu-18.04'
        env:
          ORG_GRADLE_PROJECT_mavenCentralRepositoryUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralRepositoryPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY }}
        run: ./gradlew publishLinuxX64PublicationToMavenRepository

  publish_plugin:
    runs-on: ubuntu-latest
    needs: publish_archives
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Publish the plugin artifacts
        env:
          ORG_GRADLE_PROJECT_SQLDELIGHT_BUGSNAG_KEY: ${{ secrets.ORG_GRADLE_PROJECT_SQLDELIGHT_BUGSNAG_KEY }}
          ORG_GRADLE_PROJECT_intellijPublishToken: ${{ secrets.ORG_GRADLE_PROJECT_intellijPublishToken }}
        run: ./gradlew publishPlugin

env:
  GRADLE_OPTS: -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=false -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"
